
#------------------------------------------
#Begin: Front End Administration Portal
#------------------------------------------
<IfModule mod_ssl.c>
	<VirtualHost *:443>
		ServerAdmin webmaster@ipskmanager
		
		DocumentRoot /var/www/iPSK-Manager/adminportal
        
		<Directory /var/www/iPSK-Manager/adminportal>
			AllowOverride All
	    </Directory>

		ErrorLog ${APACHE_LOG_DIR}/admin-error.log
		CustomLog ${APACHE_LOG_DIR}/admin-access.log combined

		#   SSL Engine Switch:
		#   Enable/Disable SSL for this virtual host.
		SSLEngine on

		#   A self-signed (snakeoil) certificate can be created by installing
		#   the ssl-cert package. See
		#   /usr/share/doc/apache2/README.Debian.gz for more info.
		#   If both key and certificate are stored in the same file, only the
		#   SSLCertificateFile directive is needed.
		SSLCertificateFile	/path/to/my/ssl.crt
		SSLCertificateKeyFile /path/to/my/ssl.key
		
		#   Server Certificate Chain:
		#   Point SSLCertificateChainFile at a file containing the
		#   concatenation of PEM encoded CA certificates which form the
		#   certificate chain for the server certificate. Alternatively
		#   the referenced file can be the same as SSLCertificateFile
		#   when the CA certificates are directly appended to the server
		#   certificate for convinience.
		SSLCertificateChainFile /path/to/my/ssl.chain

		<FilesMatch "\.(cgi|shtml|phtml|php)$">
				SSLOptions +StdEnvVars
		</FilesMatch>



	</VirtualHost>
</IfModule>
#------------------------------------------
#End: Front End Administration Portal
#------------------------------------------

#------------------------------------------
#Begin: Front End Portal on port 8443
#------------------------------------------
<IfModule mod_ssl.c>
	
	Listen 8443
	
	<VirtualHost *:8443>
		ServerAdmin webmaster@ipskmanager

		DocumentRoot /var/www/iPSK-Manager/portals
        
		<Directory /var/www/iPSK-Manager/portals>
	                AllowOverride All
	    </Directory>
		
		ErrorLog ${APACHE_LOG_DIR}/portal-8443-error.log
		CustomLog ${APACHE_LOG_DIR}/portal-8443-access.log combined

		#   SSL Engine Switch:
		#   Enable/Disable SSL for this virtual host.
		SSLEngine on

		#   A self-signed (snakeoil) certificate can be created by installing
		#   the ssl-cert package. See
		#   /usr/share/doc/apache2/README.Debian.gz for more info.
		#   If both key and certificate are stored in the same file, only the
		#   SSLCertificateFile directive is needed.
		SSLCertificateFile	/path/to/my/ssl.crt
		SSLCertificateKeyFile /path/to/my/ssl.key

		#   Server Certificate Chain:
		#   Point SSLCertificateChainFile at a file containing the
		#   concatenation of PEM encoded CA certificates which form the
		#   certificate chain for the server certificate. Alternatively
		#   the referenced file can be the same as SSLCertificateFile
		#   when the CA certificates are directly appended to the server
		#   certificate for convinience.
		SSLCertificateChainFile /path/to/my/ssl.chain

		<FilesMatch "\.(cgi|shtml|phtml|php)$">
				SSLOptions +StdEnvVars
		</FilesMatch>

	</VirtualHost>
</IfModule>
#------------------------------------------
#End: Front End Portal on port 8443
#------------------------------------------

#------------------------------------------
#Begin: Front End Portal on port 8444
#------------------------------------------
<IfModule mod_ssl.c>
	
	Listen 8444
	
	<VirtualHost *:8444>
		ServerAdmin webmaster@ipskmanager

		DocumentRoot /var/www/iPSK-Manager/portals
        
		<Directory /var/www/iPSK-Manager/portals>
	                AllowOverride All
	    </Directory>
		
		ErrorLog ${APACHE_LOG_DIR}/portal-8444-error.log
		CustomLog ${APACHE_LOG_DIR}/portal-8444-access.log combined

		#   SSL Engine Switch:
		#   Enable/Disable SSL for this virtual host.
		SSLEngine on

		#   A self-signed (snakeoil) certificate can be created by installing
		#   the ssl-cert package. See
		#   /usr/share/doc/apache2/README.Debian.gz for more info.
		#   If both key and certificate are stored in the same file, only the
		#   SSLCertificateFile directive is needed.
		SSLCertificateFile	/path/to/my/sslwildcard.crt
		SSLCertificateKeyFile /path/to/my/sslwildcard.key

		#   Server Certificate Chain:
		#   Point SSLCertificateChainFile at a file containing the
		#   concatenation of PEM encoded CA certificates which form the
		#   certificate chain for the server certificate. Alternatively
		#   the referenced file can be the same as SSLCertificateFile
		#   when the CA certificates are directly appended to the server
		#   certificate for convinience.
		SSLCertificateChainFile /path/to/my/sslwildcard.chain

		<FilesMatch "\.(cgi|shtml|phtml|php)$">
				SSLOptions +StdEnvVars
		</FilesMatch>

	</VirtualHost>
</IfModule>
#------------------------------------------
#End: Front End Portal on port 8444
#------------------------------------------

#------------------------------------------
#Begin: Front End Portal on port 8445
#------------------------------------------
<IfModule mod_ssl.c>
	
	Listen 8445
	
	<VirtualHost *:8445>
		ServerAdmin webmaster@ipskmanager

		DocumentRoot /var/www/iPSK-Manager/portals
        
		<Directory /var/www/iPSK-Manager/portals>
	                AllowOverride All
	    </Directory>
		
		ErrorLog ${APACHE_LOG_DIR}/portal-8445-error.log
		CustomLog ${APACHE_LOG_DIR}/portal-8445-access.log combined

		#   SSL Engine Switch:
		#   Enable/Disable SSL for this virtual host.
		SSLEngine on

		#   A self-signed (snakeoil) certificate can be created by installing
		#   the ssl-cert package. See
		#   /usr/share/doc/apache2/README.Debian.gz for more info.
		#   If both key and certificate are stored in the same file, only the
		#   SSLCertificateFile directive is needed.
		SSLCertificateFile	/path/to/my/ssl.crt
		SSLCertificateKeyFile /path/to/my/ssl.key

		#   Server Certificate Chain:
		#   Point SSLCertificateChainFile at a file containing the
		#   concatenation of PEM encoded CA certificates which form the
		#   certificate chain for the server certificate. Alternatively
		#   the referenced file can be the same as SSLCertificateFile
		#   when the CA certificates are directly appended to the server
		#   certificate for convinience.
		SSLCertificateChainFile /path/to/my/ssl.chain

		<FilesMatch "\.(cgi|shtml|phtml|php)$">
				SSLOptions +StdEnvVars
		</FilesMatch>

	</VirtualHost>
</IfModule>
#------------------------------------------
#End: Front End Portal on port 8445
#------------------------------------------